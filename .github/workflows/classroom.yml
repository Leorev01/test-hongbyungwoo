name: Autograding Tests
'on':
  - push
  - repository_dispatch

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Functionality Test
        id: functionality-test
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Functionality Test
          setup-command: ''
          command: python3 -c "
            import json
            with open('results.json', 'r') as f:
                tests = json.load(f)
            test = next(t for t in tests if t['name'] == 'Functionality Test')
            print(f'{test[\"name\"]}: {test[\"score\"]}/{test[\"max_score\"]}')
            print(test['output'])
            "
          timeout: 10
          max-score: 75

      - name: Style Check
        id: style-check
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Style Check
          setup-command: ''
          command: python3 -c "
            import json
            with open('results.json', 'r') as f:
                tests = json.load(f)
            test = next(t for t in tests if t['name'] == 'Style Check')
            print(f'{test[\"name\"]}: {test[\"score\"]}/{test[\"max_score\"]}')
            print(test['output'])
            "
          timeout: 10
          max-score: 50

      - name: Bonus Question
        id: bonus-question
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Bonus Question
          setup-command: ''
          command: python3 -c "
            import json
            with open('results.json', 'r') as f:
                tests = json.load(f)
            test = next(t for t in tests if t['name'] == 'Bonus Question')
            print(f'{test[\"name\"]}: {test[\"score\"]}/{test[\"max_score\"]}')
            print(test['output'])
            "
          timeout: 10
          max-score: 100

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          FUNCTIONALITY_TEST_RESULTS: "${{ steps.functionality-test.outputs.result }}"
          STYLE_CHECK_RESULTS: "${{ steps.style-check.outputs.result }}"
          BONUS_QUESTION_RESULTS: "${{ steps.bonus-question.outputs.result }}"
        with:
          runners: functionality_test,style_check,bonus_question
